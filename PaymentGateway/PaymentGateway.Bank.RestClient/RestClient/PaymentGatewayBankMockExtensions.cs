// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace PaymentGateway.Bank.RestClient
{
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for PaymentGatewayBankMock.
    /// </summary>
    public static partial class PaymentGatewayBankMockExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cardInfoCardNumber'>
            /// </param>
            /// <param name='cardInfoCvv'>
            /// </param>
            /// <param name='cardInfoHolderName'>
            /// </param>
            /// <param name='cardInfoExpiryMonth'>
            /// </param>
            /// <param name='cardInfoExpiryYear'>
            /// </param>
            /// <param name='amount'>
            /// </param>
            /// <param name='currencyCode'>
            /// </param>
            public static void ProcessPayment(this IPaymentGatewayBankMock operations, string cardInfoCardNumber = default(string), string cardInfoCvv = default(string), string cardInfoHolderName = default(string), int? cardInfoExpiryMonth = default(int?), int? cardInfoExpiryYear = default(int?), double? amount = default(double?), string currencyCode = default(string))
            {
                operations.ProcessPaymentAsync(cardInfoCardNumber, cardInfoCvv, cardInfoHolderName, cardInfoExpiryMonth, cardInfoExpiryYear, amount, currencyCode).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cardInfoCardNumber'>
            /// </param>
            /// <param name='cardInfoCvv'>
            /// </param>
            /// <param name='cardInfoHolderName'>
            /// </param>
            /// <param name='cardInfoExpiryMonth'>
            /// </param>
            /// <param name='cardInfoExpiryYear'>
            /// </param>
            /// <param name='amount'>
            /// </param>
            /// <param name='currencyCode'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ProcessPaymentAsync(this IPaymentGatewayBankMock operations, string cardInfoCardNumber = default(string), string cardInfoCvv = default(string), string cardInfoHolderName = default(string), int? cardInfoExpiryMonth = default(int?), int? cardInfoExpiryYear = default(int?), double? amount = default(double?), string currencyCode = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ProcessPaymentWithHttpMessagesAsync(cardInfoCardNumber, cardInfoCvv, cardInfoHolderName, cardInfoExpiryMonth, cardInfoExpiryYear, amount, currencyCode, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
